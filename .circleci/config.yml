version: 2
jobs:
  build:
    docker:
      # base image
      - image: ubuntu:16.04
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install essential packages
          command: |
            apt-get update
            apt-get install -y ca-certificates curl build-essential make git

      - run:
          name: Create version.json
          command: |
            printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' \
            "$CIRCLE_SHA1" \
            "$CIRCLE_TAG" \
            "$CIRCLE_PROJECT_USERNAME" \
            "$CIRCLE_PROJECT_REPONAME" \
            "$CIRCLE_BUILD_URL" > version.json
      - store_artifacts:
          path: version.json
      # FIXME: should use an image w/ docker installed by default
      - run:
          name: Install Docker
          command: |
            set -x
            curl -L -o /tmp/docker-$DOCKER_VERSION.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_VERSION.tgz
            [[ `sha256sum /tmp/docker-17.12.1-ce.tgz  | cut -d' ' -f1` = 1270dce1bd7e1838d62ae21d2505d87f16efc1d9074645571daaefdfd0c14054 ]]
            tar -xz -C /tmp -f /tmp/docker-$DOCKER_VERSION.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Build deployment container image
          command: docker build -t app:build .
      - run:
          name: Test flake8
          command: docker run -it app:build test_flake8
      - run:
          name: Test nose
          command: docker run -it app:build test_nose
      - run:
          name: Functional tests
          command: docker run -it app:build test_functional
      - run:
          name: Push to Dockerhub
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              bin/ci/deploy-dockerhub.sh latest
            fi
            if [ -n "${CIRCLE_TAG}" ]; then
              bin/ci/deploy-dockerhub.sh "$CIRCLE_TAG"
            fi
workflows:
  version: 2

  # workflow jobs are _not_ run in tag builds by default
  # we use filters to whitelist jobs that should be run for tags

  # workflow jobs are run in _all_ branch builds by default
  # we use filters to blacklist jobs that shouldn't be run for a branch

  # see: https://circleci.com/docs/2.0/workflows/#git-tag-job-execution

  build-test-push:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
